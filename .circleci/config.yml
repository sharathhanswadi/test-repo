version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  deploy_to_staging:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "circle-ci"
      - GOOGLE_PROJECT_ID: "circle-ci-256918"
      - GOOGLE_COMPUTE_ZONE: "us-central1-a"
      - GOOGLE_CLUSTER_NAME: "glitter-bomb-cluster-prod"
    steps:
      - checkout
      - run: 
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - setup_remote_docker  
      - run: 
          name: Docker build and push
          command: |
            if [ -d "reservation" ]
            then 
            cd reservation
            docker build \
              --build-arg COMMIT_REF=${CIRCLE_SHA1} \
              --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
              -t ${PROJECT_NAME} .
            docker tag ${PROJECT_NAME} gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io
            docker push gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
            cd ..
            fi 
      - run:
          name:  docker build  and push 
          command: |

            cd porch
            docker build \
              --build-arg COMMIT_REF=${CIRCLE_SHA1} \
              --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
              -t ${PROJECT_NAME} .
            docker tag ${PROJECT_NAME} gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io
            docker push gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
      - run:
          name:  install istioctl 
          command: |
            curl -L https://git.io/getLatestIstio | ISTIO_VERSION=1.1.16 sh -
            cd istio-1.1.16/bin && ls && mv istioctl /usr/local/bin
            
      - run:
          name: install helm 
          command: |
              curl -O https://github.com/kubernetes/helm/archive/v2.7.2.tar.gz
              tar -zxvf helm-v2.7.2-linux-amd64.tgz
              mv linux-amd64/helm /usr/local/bin/helm
              helm init       
           

      - run: 
          name: Deploy to Kubernetesi
          command: |
            kubectl apply -f locations.yaml     
            kubectl apply -f <(istioctl kube-inject -f locations.yaml)
            kubectl set image deployment/locations   locations=gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1} 
            kubectl rollout status deployment/locations
workflows:
  version: 2
  build:
    jobs:
      - build
      - deploy_to_staging:
          requires:
            - build
          filters:
            branches:
              only: master
